import pandas as pd
df=pd.read_csv('/content/Restaurant_Reviews.csv')
df
from matplotlib import pyplot as plt
df['Liked'].plot(kind='line', figsize=(8, 4), title='Liked')
plt.gca().spines[['top', 'right']].set_visible(False)
from matplotlib import pyplot as plt
df['Liked'].plot(kind='hist', bins=20, title='Liked')
plt.gca().spines[['top', 'right',]].set_visible(False)
df.size
df.shape
df.Liked
x=df.iloc[:,0].values
y=df.iloc[:,1].values
print(x)
print(y)
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.linear_model import LogisticRegression
from sklearn.model_selection import train_test_split
x_Train, x_Test, y_Train, y_Test = train_test_split(x, y, test_size=0.2, random_state=42)
tfidf_vectorizer = TfidfVectorizer(max_features=1000) 
x_Train_tfidf = tfidf_vectorizer.fit_transform(x_Train)
x_Test_tfidf = tfidf_vectorizer.transform(x_Test)
model = LogisticRegression()
model.fit(x_Train_tfidf, y_Train)
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn.model_selection import train_test_split
x_Train, x_Test, y_Train, y_Test = train_test_split(x, y, test_size=0.2, random_state=42)
tfidf_vectorizer = TfidfVectorizer(max_features=1000)
x_Train_tfidf = tfidf_vectorizer.fit_transform(x_Train)
x_Test_tfidf = tfidf_vectorizer.transform(x_Test)
model = MultinomialNB()  # Use Multinomial Naive Bayes
model.fit(x_Train_tfidf, y_Train)
from sklearn.metrics import accuracy_score
y_pred = model.predict(x_Test_tfidf)  # X_test_tfidf should contain your test data
accuracy = accuracy_score(y_Test, y_pred)
print("Accuracy:", accuracy*100)
new_text_data = ["food is good"]  # Replace with your new text data
new_text_data_tfidf = tfidf_vectorizer.transform(new_text_data)
predictions = model.predict(new_text_data_tfidf)
print(new_text_data_tfidf)  # Check the contents of new_text_data_tfidf
predictions = model.predict(new_text_data_tfidf)
print(predictions)
